# All-environment compose file.

services:
  caddy:
    image: ghcr.io/explodinglabs/superstack-caddy:0.1.0
    build:
      context: ./caddy
    ports:
      - ${CADDY_HTTP_PORT:?}:80
    volumes:
      - caddy_data:/data:rw
    environment:
      CADDY_AUTO_HTTPS: $CADDY_AUTO_HTTPS

  postgrest:
    image: postgrest/postgrest:v12.2.8
    environment:
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_URI: postgres://authenticator:${PGRST_AUTHENTICATOR_PASS:?}@postgres:5432/app
    depends_on:
      postgres:
        condition: service_healthy

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.20.1
    environment:
      SWAGGER_JSON_URL: http://localhost:${CADDY_HTTP_PORT:?}/rest/
    depends_on:
      - postgrest

  postgres:
    image: ghcr.io/explodinglabs/superstack-postgres:0.1.0
    build:
      context: ./postgres
    command: postgres -c custom.authenticator_password=${PGRST_AUTHENTICATOR_PASS:?}
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    environment:
      PGDATABASE: app
      PGPASS: ${PGPASS}
      PGUSER: ${PGUSER}
      POSTGRES_DB: app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
      PGRST_AUTHENTICATOR_PASS: ${PGRST_AUTHENTICATOR_PASS:?} # Included for use in the init_postgrest migration
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-d", "app"]
      interval: 0.5s
      timeout: 3s
      retries: 10

volumes:
  postgres_data:
  caddy_data:
